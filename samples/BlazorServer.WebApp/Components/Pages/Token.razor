@page "/token"
@using BlazorServerWebApp.Services
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IHttpContextAccessor HttpContextAccessor
@inject TokenService TokenService

<pre>User authenticated:  @IsloggedIn</pre>


<h3>Access Token</h3>

@if (token is not null)
{
    <pre>@token</pre>
    @*  <pre>@decodedToken</pre> *@
}

<h3>Id Token</h3>

@if (idToken is not null)
{
    <pre>@idToken</pre>
}

@code {
    private string? token;
    private string? idToken;
    private bool? IsloggedIn;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        IsloggedIn = user.Identity?.IsAuthenticated;
        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            token = await TokenService.GetAccessTokenAsync();
            idToken = await TokenService.GetIdTokenAsync();

            var accessToken = user.FindFirst("access_token")?.Value;
            var idToken2 = user.FindFirst("id_token")?.Value;
        }
    }
}
